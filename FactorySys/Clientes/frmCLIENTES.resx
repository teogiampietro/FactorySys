<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0m4XAN57KQDbgS4A3YEvANyCMADmjT8As5ZxAOiPQgDvj0QA6pFEAOyTRwDtlUkA75dMAPGR
        RgDzk0kA9ZRKAPWVTAD4lkwA8ZhOAPOaUQD1nFMA9p1UAPigWADTo30A8qlmAPi6eQBUnbIAVqC2ABqu
        /gA6tukAKrf/AC64/gA3tPIAObz1ADS1/wA+tv8AN7r/ADq4/wA+uf8AObz9AEC05gBWsusAQL/9AEi4
        /wBgvv8ANMD+AETG/wBNwvsASsT+AE3F/gBXwP8AXsH/AFrF/gBexv8AU8r/AFTL/wBXzv8AXsj8AGPD
        /wBnw/0AYcX/AG3H/wBgyf0AYcz/AGrI/wBpz/8Abc3/AHzH/wB6zvgAd9D+AHDU/wB01v8Addn/AHjY
        /wB93P8AvqeFAJymqwCfvrcAp6KiAKSkpQCtqakAq7ajALm2tgC9ubkAxaqDAOm5gQD6u4wAwb29AP7J
        iwCjk9YAnIb/AK6U/wClmPgAtKf/AMWo/wDLtfQA0bn/ALvHzwCHxeUAl8b/AI3X+wCO3P8Amdj3AJva
        +QCg3fsAqt74ALHb/wCH4f8AiOD/AJbh/wCm4/8Aq+L+AK/j/ACg6f8Aqej/ALXr/wCx7P8AuO3/AL3w
        /wDFwcEAycXFAMHDyADNyckA0c3NAMvI0wDU0NAA19bWANvT0wDS2d4Ax+b1AMjm9gDM6/sA0Ov6AN/y
        /ADm7vMA5u/0AOjw9gDh8vwA6vT5APTx8QD29PQA+Pb2APr5+QD8+/sA/v39AFAiAABwMAAAkD4AALBN
        AADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8DAABQBAAAcAYAAJAJ
        AACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAAAAAvAA4AUAAXAHAA
        IQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP///wAAAAAALwAgAFAA
        NgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R8AD///8AAAAAACwA
        LwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx/wD70f8A////AAAA
        AAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAFFUVFFUVFRUVFRUVFRUVFNTU1NTU1NTU1NTU08AAAAAWJ+fn5+fn5+fn5+f
        n5+fn5+fn5+fn5+fn5+fUwAAAABYn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn59TAAAAAFiRkZGRkZGR
        kZGRkZGRkZGRkZGRkZGRkZGRn1QAAAAAeJGRkZGRkZGRJXCRkZGRkZGRkZGRkZGRkZGfVAAAAAB4kZCQ
        kJCQkJBGKjWGkJCQkJCQkJCQkJCQkJFUAAAAAHiRkJCQkJCQkIozZCZxkJCQkJCQkJCQkJCQkVgAAAAA
        eZCPj4+Pj4+Pjz9rRB+Ej4+Pj4+Pj4+Pj4+RWAAAAAB5kI+Pj4+Pj4+PhTJyQx2Lj4+Pj4+Pj4+Pj5FY
        AAAAAHmQj4+Pj4+Pj4+PaTdsQSiLj4+Pj4+Pj4+PkXgAAAAAe5CPj4+Pj4+Pj4+PZUlLOzKPj4+Pj4+P
        j4+ReAAAAAB7kI6Ojo6Ojo6Ojo6OOmZIPTqOjo6Ojo6OjpF4AAAAAHuPjo6Ojo6Ojo6Ojo6OMXU5JGiO
        jo6Ojo6OkXkAAAAAfI+NjY2NjY2NjY2NjY2JK3dCI2qNjY2NjY2QeQAAAAB8j42NjY2NjY2NjY2NjY2D
        LnM2IIONjY2NjZB5AAAAAH6PjY2NjY2NjY2NjY2NjY2CL3NBHYiNjY2NkHsAAAAAfo+MjIyMjIyMjIyM
        jIyMjIxnOEo+KIeMjIyQewAAAAB+j4yMjIyMjIyMjIyMjIyMjIxFbUctMIyMjJB7AAAAABIXFxcXFxcX
        FxYVFBMNDAsKCAYcbkA0GwUDAwEAAAAAF1lZWVlZWVlZWVlZWVlZWVlZWVkedDEsTllZAwAAAAAWGhoa
        GhoaGhoaGhoaGhoaGhoaGlYpdj0nUhoEAAAAABEZGRkZGRkZGRkZGRkZGRkZGRkZGVUibzwhTAIAAAAA
        VxAREREREREREREREREREREREQ8OCQc4eoFNGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjfnxQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGJ/gFpdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AH1gXFsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGFfXgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP/////////////////////AAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA///
        /8P////B////4f////H/////
</value>
  </data>
</root>