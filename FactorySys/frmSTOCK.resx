<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAB2FnAAhjbAAKZnAADml4ADWGAAA4jAoAAKkAAAWsCQAIrg0AOp4iABa3IwAauSkAQY0QAEKR
        FgBFpzoAJ8I+AD6BdgBJhU8ATKxEAF6nQwBGs0UAS7NQAEW5WABOu1wASr1eAGekQABHv2AAWrxgAHO+
        aQB5u2wAOMxZAELCYwBFwWEARsNmAEbMZQBFx20ARs9vAFXFaABD02sARNBrAEXVbgBIx3EAXsRxAFTM
        dgBUyXkAXsp/AEfWcQBJ13QAT9J9AEzZeQBQ0nkA3IAqAN2CLgDZgTMA4Ig1AIi7ZQCNu3AA6I5GAOuV
        TgDhl1MA6phSAOmbVQDsmVQA7ZxWAOmfWADpoFYA5qBbAOikXQDwo14AxZZ/ANK7dgDqp2AA7KpjAO6t
        ZgDxqGYA8LBpAPWwbgDlpXEA56tyAPOzdwD2t3YA87R4APq+fgCZwn8AHxehAAcJtgAKDrkAQTSkABdx
        iAAheJkAKXqjAEBAvQBjUacAERbCABAYwwAKEtgADBbfABsgwwAgJcUAKS/NACMs3AAsONoAMD7ZAA4a
        5QATG+MAER7qAAAA9QAEBfUACQv2ABEW9gAbJecAFiXwAB8m9wAdLvQAHjX/ACQx7AArNuoAJS74AC0+
        8AAiNvkAKjT4ACw2+AAkOfwAJT3/ADhH5gA7TOAALEH+ADhL9AAzQPkANEH5ADNL/gA/TvkAOUz8AGJk
        zwBIWvYARVb6AENa+ABBW/0ASVr6AExe+gBIW/4ASGH7AEpg/ABRZfsAVmf/AFBs/wBYbPsAXHP1AFd0
        /wBcc/wAY3P8AGB3/ACacogAVNKDAFLdgwBT3YUAVN2GAFbfiQB11ZYAV+CLAFrijwBg5ZkAZemhAG3u
        rgB15aoAcvG2AHbzvABngPwAZYT/AGmD/ABshv0AcY79AHaT/QB6mP4Afpz+AH3ywAB49cAAe/fEAHz4
        xwC8kIsA3a2NAPW9gwC6yIEAjNunAKPhtwDQx4IA58mHAPvBggD3wokA+MOLAPjFjgD0zY4A/cmLAP3K
        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
        H////n//////////////////
</value>
  </data>
</root>