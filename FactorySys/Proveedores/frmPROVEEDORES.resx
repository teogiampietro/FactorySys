<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0m4XAN57KQA2khIAMpoYADWhJQA5qDIAJ8I+AD2vQABBtk0ARb1aAGioSgBprlMAa7RdAG26
        ZwBuv3AAKMNAADHITgAzyVEAO85eAD3PYQA90GEAScNnAEXUbgBMynUATMx9AEfWcQBI13MATtt9ANuB
        LgDdgS8A3IIxAN+FNQDlgTEA4Yc3AOOJOgDkizwA5o0/AOiIOgDqijwA7Iw/AOiPQgDujkIA749EAOqR
        RADsk0cA7ZVJAO+XTADxkUYA85NJAPWUSgD1lUwA+JZMAPGYTgDzmlEA9ZxTAPadVAD4oFgA8qlmAOus
        eAD4unkAAACnAAECqgAQL70APj67ADhijwAKEcMAERXUABIg3AAZLPAAJS7nAAlb0wA4RusAMUf0AH18
        0ABOYfAAZn/2AFDQgQBS04YAUdyCAFXVigBX1o4AWdeRAFjhjABb45IAXOSTAGHmmwBi55wAZemhAGfq
        pABq7KkAb++xAHHwtQB29L0AePW/AAWu/wANs/8AErX/ABa3/wAcuv8AP7/9AC7A/wAyxv8AefXAAHv3
        xAB/+ssARMb/AFrM/wBE0P8AVtn/AGDG/wBu0v8AaOL/AHrs/wCnoqIArampALm2tgC9ubkA+ruMAMG9
        vQD+yYsAgPrNAIX91ACM9f8Anf7/AMXBwQDJxcUAzcnJANHNzQDU0NAA9PLyAPb09AD49vYA+vj4APz7
        +wD+/v4A/9IRAP/YMQD/3VEA/+RxAP/qkQD/8LEA//bRAP///wAAAAAALxQAAFAiAABwMAAAkD4AALBN
        AADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8DAABQBAAAcAYAAJAJ
        AACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAAAAAvAA4AUAAXAHAA
        IQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP///wAAAAAALwAgAFAA
        NgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R8AD///8AAAAAACwA
        LwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx/wD70f8A////AAAA
        AAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAc3V1c3V1dXV1dXV1
        dXV1dHR0dHR0dHR0dHR0cgAAAAB3j4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj490AAAAAHePj4+Pj4+P
        j4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj3QAAAAAd4eHh25vb29vb0VJSUlJSUlFUFFSUVAZh4ePdQAAAAB9h4eH
        a3x8fHx8RExMTExMTERdeXppXU6Hh4d1AAAAAH2HhoZqe3t7e3tCS0tLS0tLQlxnaF5cToaGh3UAAAAA
        fYeGhmVxcXFxcT5ISEhISEg+WltcW1pNhoaHdwAAAAB+hoaGY3BwcHBwPUZGRkZGRj1XWFlYVhiGhod3
        AAAAAH6GhYVibW1tbW09Q0NDQ0NDPVNUVVRTFoWFh3cAAAAAfoaFhWFsbGxsbEc/QEBKSkpBHE9PTxwK
        hYWHfQAAAAB/hoWFYGZmZmZmYGSFhYWFhQ8XGhsaFwmFhYd9AAAAAH+GhIRfYWFhYWFfZISEhISEDhMV
        FRQTCISEh30AAAAAf4aEhISEhISEhISEhISEhIQNERISEhEGhISHfgAAAACAhoODg4ODg4ODg4ODg4OD
        gwwHEBAQBwWDg4Z+AAAAAICFg4ODg4ODg4ODg4ODg4ODCwQEBAQEA4ODhn4AAAAAgYWCgoKCgoKCgoKC
        goKCgoKCgoKCgoKCgoKGfwAAAACBhYKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoZ/AAAAAIGFgoKCgoKC
        goKCgoKCgoKCgoKCgoKCgoKChn8AAAAANDk5OTk5OTk5ODc2NS8uLSwpJSQjIiAfHx0dAQAAAAA5eHh4
        eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHgdAAAAADg8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PB4AAAAA
        Mzo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6AgAAAAB2MjMzMzMzMzMzMzMzMzMzMzMzMTArKignJiE7
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////////////////////////wAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAP/////////////////////
</value>
  </data>
</root>